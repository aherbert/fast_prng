#ifndef __cdm_z_exp__
#define __cdm_z_exp__
#include <stdlib.h>
#include <math.h>
#include "MT19937.h"
#define	__EXP_BINS__	252

#define _WDS_SAMPLER() 	(Rand->l >> 8 >= pmf[Rand->s[0]] ? map[Rand++->s[0]] : Rand++->s[0])
#define _CDM_SAMPLE(start, end, U, scale) ((start)*(scale) + ((end) - (start))*(U))
#define _EXP_MINIMUM_TESTWORTHY_VALUE(y, x) ((y) - (x) > 1707931576952627293)

static double __exp_X__[__EXP_BINS__+1] = { 1.05044788064e-16, 9.46863774101e-17, 8.84906411237e-17, 8.40286192908e-17, 8.05280511486e-17, 7.76412468859e-17, 7.51811534128e-17, 7.30353286765e-17, 7.11308104853e-17, 6.94175217968e-17, 6.78595810515e-17, 6.64303862499e-17, 6.5109660951e-17, 6.38815909617e-17, 6.27336011449e-17, 6.16555251336e-17, 6.06390254767e-17, 5.96771786332e-17, 5.87641715428e-17, 5.7895075572e-17, 5.70656752849e-17, 5.62723368018e-17, 5.55119052379e-17, 5.47816238316e-17, 5.40790694746e-17, 5.34021008044e-17, 5.27488160288e-17, 5.21175183691e-17, 5.15066875277e-17, 5.09149559589e-17, 5.03410890052e-17, 4.97839681655e-17, 4.924257692e-17, 4.87159886569e-17, 4.82033563373e-17, 4.77039036058e-17, 4.72169171101e-17, 4.67417398385e-17, 4.62777653162e-17, 4.58244325316e-17, 4.53812214842e-17, 4.49476492656e-17, 4.45232665984e-17, 4.41076547698e-17, 4.37004229076e-17, 4.33012055536e-17, 4.29096604957e-17, 4.25254668271e-17, 4.21483232036e-17, 4.17779462761e-17, 4.14140692772e-17, 4.10564407438e-17, 4.07048233606e-17, 4.03589929111e-17, 4.00187373239e-17, 3.96838558041e-17, 3.93541580418e-17, 3.9029463488e-17, 3.87096006926e-17, 3.83944066971e-17, 3.80837264778e-17, 3.77774124328e-17, 3.74753239113e-17, 3.71773267782e-17, 3.6883293013e-17, 3.65931003391e-17, 3.63066318801e-17, 3.60237758423e-17, 3.57444252193e-17, 3.54684775183e-17, 3.51958345054e-17, 3.49264019685e-17, 3.46600894966e-17, 3.43968102738e-17, 3.41364808872e-17, 3.38790211472e-17, 3.36243539196e-17, 3.33724049681e-17, 3.31231028076e-17, 3.28763785654e-17, 3.26321658519e-17, 3.23904006388e-17, 3.21510211445e-17, 3.19139677264e-17, 3.16791827797e-17, 3.14466106417e-17, 3.12161975018e-17, 3.09878913162e-17, 3.07616417282e-17, 3.05373999917e-17, 3.03151189e-17, 3.00947527177e-17, 2.98762571164e-17, 2.9659589114e-17, 2.94447070169e-17, 2.92315703652e-17, 2.90201398809e-17, 2.88103774182e-17, 2.86022459171e-17, 2.83957093583e-17, 2.81907327209e-17, 2.79872819424e-17, 2.77853238795e-17, 2.75848262718e-17, 2.73857577071e-17, 2.71880875873e-17, 2.6991786097e-17, 2.67968241729e-17, 2.66031734749e-17, 2.64108063579e-17, 2.62196958453e-17, 2.60298156036e-17, 2.58411399178e-17, 2.56536436679e-17, 2.54673023068e-17, 2.52820918383e-17, 2.50979887965e-17, 2.49149702261e-17, 2.47330136631e-17, 2.45520971162e-17, 2.43721990495e-17, 2.41932983651e-17, 2.40153743868e-17, 2.3838406844e-17, 2.36623758567e-17, 2.34872619205e-17, 2.33130458923e-17, 2.31397089766e-17, 2.29672327118e-17, 2.27955989576e-17, 2.26247898821e-17, 2.24547879498e-17, 2.22855759097e-17, 2.21171367834e-17, 2.19494538545e-17, 2.17825106573e-17, 2.1616290966e-17, 2.14507787846e-17, 2.12859583367e-17, 2.11218140552e-17, 2.09583305731e-17, 2.07954927133e-17, 2.063328548e-17, 2.04716940487e-17, 2.03107037577e-17, 2.01503000987e-17, 1.99904687084e-17, 1.98311953595e-17, 1.96724659519e-17, 1.95142665048e-17, 1.93565831471e-17, 1.91994021102e-17, 1.90427097183e-17, 1.88864923809e-17, 1.87307365841e-17, 1.85754288819e-17, 1.84205558879e-17, 1.8266104267e-17, 1.81120607264e-17, 1.79584120073e-17, 1.7805144876e-17, 1.76522461148e-17, 1.74997025134e-17, 1.73475008596e-17, 1.71956279297e-17, 1.70440704794e-17, 1.68928152335e-17, 1.67418488768e-17, 1.65911580426e-17, 1.64407293035e-17, 1.62905491593e-17, 1.61406040268e-17, 1.59908802273e-17, 1.58413639753e-17, 1.56920413655e-17, 1.55428983601e-17, 1.53939207751e-17, 1.52450942663e-17, 1.50964043142e-17, 1.4947836209e-17, 1.47993750343e-17, 1.46510056496e-17, 1.4502712673e-17, 1.43544804617e-17, 1.42062930927e-17, 1.40581343412e-17, 1.39099876583e-17, 1.37618361479e-17, 1.36136625407e-17, 1.3465449168e-17, 1.33171779334e-17, 1.31688302817e-17, 1.30203871669e-17, 1.28718290175e-17, 1.2723135699e-17, 1.25742864738e-17, 1.24252599586e-17, 1.22760340775e-17, 1.21265860127e-17, 1.19768921498e-17, 1.18269280198e-17, 1.16766682356e-17, 1.15260864231e-17, 1.13751551466e-17, 1.12238458265e-17, 1.1072128651e-17, 1.09199724778e-17, 1.07673447276e-17, 1.06142112661e-17, 1.04605362749e-17, 1.03062821085e-17, 1.0151409136e-17, 9.99587556602e-18, 9.83963725164e-18, 9.68264747315e-18, 9.52485669506e-18, 9.36621229377e-18, 9.20665825122e-18, 9.0461348093e-18, 8.88457807866e-18, 8.72191959414e-18, 8.55808580795e-18, 8.39299750915e-18, 8.22656915627e-18, 8.05870810636e-18, 7.88931372008e-18, 7.71827631772e-18, 7.54547595428e-18, 7.37078097407e-18, 7.19404629371e-18, 7.01511134893e-18, 6.83379762035e-18, 6.6499056279e-18, 6.46321124689e-18, 6.2734611485e-18, 6.08036709547e-18, 5.88359872016e-18, 5.68277425894e-18, 5.47744848668e-18, 5.267096739e-18, 5.05109334561e-18, 4.82868187282e-18, 4.59893300303e-18, 4.36068309646e-18, 4.11244129812e-18, 3.8522428053e-18, 3.57740409032e-18, 3.28408487024e-18, 2.96642684887e-18, 2.61461698922e-18, 2.20950660227e-18, 1.70008182521e-18, 0.0};

void exponential_setup(){
	mt_init();
}

/* Text wrapping is not recommended for this document */
static inline double _exp_overhang(uint8_t i) {
	static double *X = __exp_X__;
	static double Y[__EXP_BINS__+1] = { 2.79760274756e-23, 5.90125499135e-23, 9.22221169337e-23, 1.27195152333e-22, 1.63688471558e-22, 2.01538660664e-22, 2.40627391597e-22, 2.80864574483e-22, 3.22179102702e-22, 3.64513311717e-22, 4.07819442282e-22, 4.52057268417e-22, 4.97192442432e-22, 5.43195302298e-22, 5.90039988773e-22, 6.37703776742e-22, 6.86166558819e-22, 7.35410439719e-22, 7.85419412872e-22, 8.36179099219e-22, 8.87676533752e-22, 9.39899989255e-22, 9.92838829392e-22, 1.0464833852e-21, 1.1008248505e-21, 1.15585519262e-21, 1.21156707581e-21, 1.26795379507e-21, 1.32500921871e-21, 1.38272773818e-21, 1.44110422417e-21, 1.50013398788e-21, 1.55981274681e-21, 1.62013659444e-21, 1.68110197321e-21, 1.74270565037e-21, 1.80494469639e-21, 1.86781646555e-21, 1.93131857843e-21, 1.99544890618e-21, 2.0602055562e-21, 2.12558685922e-21, 2.19159135758e-21, 2.25821779448e-21, 2.32546510426e-21, 2.39333240355e-21, 2.46181898311e-21, 2.53092430037e-21, 2.60064797272e-21, 2.67098977118e-21, 2.74194961474e-21, 2.81352756509e-21, 2.88572382181e-21, 2.95853871795e-21, 3.03197271596e-21, 3.10602640398e-21, 3.18070049239e-21, 3.25599581071e-21, 3.33191330467e-21, 3.40845403365e-21, 3.48561916818e-21, 3.56340998782e-21, 3.64182787912e-21, 3.72087433382e-21, 3.80055094719e-21, 3.88085941654e-21, 3.96180153992e-21, 4.04337921489e-21, 4.12559443752e-21, 4.20844930141e-21, 4.29194599692e-21, 4.3760868105e-21, 4.46087412409e-21, 4.54631041465e-21, 4.63239825384e-21, 4.7191403077e-21, 4.80653933651e-21, 4.89459819472e-21, 4.98331983091e-21, 5.07270728797e-21, 5.16276370317e-21, 5.25349230853e-21, 5.34489643109e-21, 5.43697949335e-21, 5.52974501377e-21, 5.62319660735e-21, 5.71733798626e-21, 5.81217296057e-21, 5.90770543907e-21, 6.00393943011e-21, 6.10087904254e-21, 6.19852848677e-21, 6.29689207581e-21, 6.39597422647e-21, 6.49577946058e-21, 6.5963124063e-21, 6.69757779955e-21, 6.7995804854e-21, 6.90232541968e-21, 7.00581767057e-21, 7.11006242029e-21, 7.21506496692e-21, 7.3208307262e-21, 7.42736523355e-21, 7.53467414603e-21, 7.64276324452e-21, 7.7516384359e-21, 7.86130575536e-21, 7.97177136879e-21, 8.08304157528e-21, 8.19512280973e-21, 8.3080216455e-21, 8.42174479728e-21, 8.53629912395e-21, 8.65169163163e-21, 8.76792947682e-21, 8.88501996964e-21, 9.00297057726e-21, 9.12178892739e-21, 9.24148281191e-21, 9.36206019072e-21, 9.48352919559e-21, 9.60589813433e-21, 9.72917549494e-21, 9.85336995009e-21, 9.97849036162e-21, 1.01045457853e-20, 1.02315454757e-20, 1.03594988915e-20, 1.04884157006e-20, 1.06183057854e-20, 1.07491792491e-20, 1.08810464214e-20, 1.10139178643e-20, 1.1147804379e-20, 1.12827170125e-20, 1.14186670643e-20, 1.15556660939e-20, 1.1693725928e-20, 1.18328586687e-20, 1.19730767012e-20, 1.21143927026e-20, 1.22568196505e-20, 1.24003708324e-20, 1.25450598551e-20, 1.26909006547e-20, 1.28379075068e-20, 1.29860950378e-20, 1.31354782358e-20, 1.32860724627e-20, 1.34378934661e-20, 1.35909573928e-20, 1.37452808017e-20, 1.39008806779e-20, 1.40577744479e-20, 1.42159799943e-20, 1.43755156726e-20, 1.45364003272e-20, 1.469865331e-20, 1.48622944981e-20, 1.50273443136e-20, 1.51938237439e-20, 1.5361754363e-20, 1.55311583539e-20, 1.57020585321e-20, 1.58744783704e-20, 1.60484420252e-20, 1.62239743633e-20, 1.64011009912e-20, 1.65798482853e-20, 1.67602434241e-20, 1.69423144217e-20, 1.71260901636e-20, 1.73116004443e-20, 1.7498876007e-20, 1.76879485859e-20, 1.78788509506e-20, 1.80716169529e-20, 1.82662815774e-20, 1.84628809939e-20, 1.8661452614e-20, 1.88620351507e-20, 1.90646686816e-20, 1.92693947171e-20, 1.94762562719e-20, 1.96852979417e-20, 1.98965659852e-20, 2.01101084112e-20, 2.03259750722e-20, 2.05442177643e-20, 2.07648903341e-20, 2.09880487935e-20, 2.12137514427e-20, 2.14420590028e-20, 2.1673034758e-20, 2.19067447091e-20, 2.21432577388e-20, 2.23826457902e-20, 2.26249840603e-20, 2.2870351209e-20, 2.31188295858e-20, 2.33705054764e-20, 2.36254693704e-20, 2.38838162535e-20, 2.4145645926e-20, 2.44110633511e-20, 2.46801790365e-20, 2.49531094526e-20, 2.52299774933e-20, 2.55109129826e-20, 2.57960532346e-20, 2.60855436726e-20, 2.63795385165e-20, 2.66782015467e-20, 2.69817069552e-20, 2.72902402981e-20, 2.76039995623e-20, 2.79231963649e-20, 2.82480573071e-20, 2.85788255046e-20, 2.89157623275e-20, 2.92591493819e-20, 2.96092907794e-20, 2.99665157442e-20, 3.03311816234e-20, 3.07036773792e-20, 3.10844276602e-20, 3.14738975751e-20, 3.18725983216e-20, 3.22810938688e-20, 3.27000089409e-20, 3.31300386317e-20, 3.35719600726e-20, 3.40266467237e-20, 3.44950860441e-20, 3.49784015793e-20, 3.54778808974e-20, 3.59950113945e-20, 3.65315268696e-20, 3.70894691331e-20, 3.76712710671e-20, 3.82798710856e-20, 3.89188749317e-20, 3.9592791337e-20, 4.03073877687e-20, 4.10702513849e-20, 4.18917229891e-20, 4.27865646248e-20, 4.37772298348e-20, 4.49011940289e-20, 4.62312357106e-20, 4.79598206725e-20, 5.42101086243e-20};
	uint64_t y;
	MT_FLUSH();
	if (Rand[0].l > Rand[1].l) { 
		y = Rand[0].l;
		Rand[0].l = Rand[1].l;
	}
	else {
		y = Rand[1].l;
	}
	double x = _CDM_SAMPLE(X[i], X[i-1], pow(2, -8)*Rand->l, pow(2, 56));
	Rand += 2;
	if (_EXP_MINIMUM_TESTWORTHY_VALUE(y, Rand[-2].l) || _CDM_SAMPLE(Y[i-1], Y[i], pow(2, 56) - y, pow(2, 56)) <= exp(-x) ) return x;
	return _exp_overhang(i);
}

static inline double exponential() {
	static uint8_t map[256] = { 0, 0, 1, 235, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 250, 250, 250, 250, 250, 250, 250, 249, 249, 249, 249, 249, 249, 248, 248, 248, 248, 247, 247, 247, 247, 246, 246, 246, 245, 245, 244, 244, 243, 243, 242, 241, 241, 240, 239, 237, 3, 3, 4, 4, 6, 0, 0, 0, 0, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 2, 0, 0, 0 };
	static uint64_t pmf[256] = { 72057594037927930u, 42371753696506213u, 46436183522457200u, 64888060121167341u, 61478267669560543u, 70562032810685515u, 59855545430616049u, 66001962384821446u, 60326972282961775u, 55739654989873398u, 51947960445620046u, 48756975425848834u, 46031394234150542u, 43674206880967483u, 41613956922677162u, 39796790416271814u, 38181312345524856u, 36735154945123697u, 35432626166932627u, 34253060204861267u, 33179636369949223u, 32198517683731754u, 31298212250731688u, 30469092746039951u, 29703030001897365u, 28993110179291267u, 28333414016715460u, 27718842764824495u, 27144979638871444u, 26607978581086409u, 26104474229279661u, 25631508502895981u, 25186470321571583u, 24767045784469964u, 24371176744027817u, 23997026162721326u, 23642948986530019u, 23307467532699050u, 22989250592889217u, 22687095610865144u, 22399913417532608u, 22126715103516808u, 21866600686666933u, 21618749293409312u, 21382410622230453u, 21156897497358280u, 20941579352960673u, 20735876514445298u, 20539255164933245u, 20351222902647970u, 20171324809539033u, 19999139963548964u, 19834278336986905u, 19676378031876675u, 19525102810185550u, 19380139882767540u, 19241197925852564u, 19108005298149369u, 18980308435223841u, 18857870400880368u, 18740469577889219u, 18627898482647825u, 18519962690287052u, 18416479858396437u, 18317278838972527u, 18222198869432882u, 18131088834619372u, 18043806592642649u, 17960218358240315u, 17880198138029947u, 17803627212661992u, 17730393661423630u, 17660391925324274u, 17593522405115972u, 17529691091073553u, 17468809221690125u, 17410792968732998u, 17355563146362353u, 17303044942249546u, 17253167668826772u, 17205864532990090u, 17161072422735586u, 17118731709351255u, 17078786063923606u, 17041182287024671u, 17005870150559017u, 16972802250835994u, 16941933872020892u, 16913222859195207u, 16886629500320597u, 16862116416468322u, 16839648459727681u, 16819192618260311u, 16800717928012670u, 16784195390639519u, 16769597897232190u, 16756900157477049u, 16746078633904188u, 16737111480911758u, 16729978488282032u, 16724661028926353u, 16721142010619769u, 16719405831506598u, 16719438339176750u, 16721226793131131u, 16724759830467744u, 16730027434640770u, 16737020907150064u, 16745732842042890u, 16756157103109181u, 16768288803674679u, 16782124288898074u, 16797661120494140u, 16814898063810834u, 16833835077199706u, 16854473303625923u, 16876815064473643u, 16900863855509755u, 16926624344977517u, 16954102373797717u, 16983304957863259u, 17014240292421283u, 17046917758541646u, 17081347931678431u, 17117542592340767u, 17155514738891732u, 17195278602505164u, 17236849664315271u, 17280244674801927u, 17325481675462805u, 17372580022829142u, 17421560414893207u, 17472444920020628u, 17525257008431196u, 17580021586341435u, 17636765032869830u, 17695515239817790u, 17756301654447956u, 17819155325395585u, 17884108951857581u, 17951196936218762u, 18020455440288458u, 18091922445333681u, 18165637816112646u, 18241643369127224u, 18319982945334599u, 18400702487572285u, 18483850122977321u, 18569476250700644u, 18657633635240951u, 18748377505751915u, 18841765661704462u, 18937858585315142u, 19036719561188683u, 19138414803660363u, 19243013592358691u, 19350588416561817u, 19461215128961038u, 19574973109503631u, 19691945440040326u, 19812219090569913u, 19935885117939368u, 20063038877935897u, 20193780251791476u, 20328213888209701u, 20466449462129291u, 20608601951548248u, 20754791933857145u, 20905145903264581u, 21059796611052289u, 21218883430559555u, 21382552748986121u, 21550958388307798u, 21724262057823890u, 21902633841118124u, 22086252720490631u, 22275307142241516u, 22469995626539425u, 22670527426003938u, 22877123237578003u, 23090015972766851u, 23309451591877983u, 23535690008535435u, 23769006071451568u, 24009690631248482u, 24258051701035325u, 24514415720482028u, 24779128934309020u, 25052558897450219u, 25335096120675462u, 25627155872200962u, 25929180152817930u, 26241639864357026u, 26565037193943602u, 26899908239533902u, 27246825905726846u, 27606403102906182u, 27979296287475655u, 28366209386427324u, 28767898155877636u, 29185175030671425u, 29618914530928218u, 30070059301707777u, 30539626874138787u, 31028717250750454u, 31538521434836693u, 32070331044047142u, 32625549172744801u, 33205702696879318u, 33812456250313881u, 34447628144093041u, 35113208551809579u, 35811380347244740u, 36544543057666430u, 37315340491201533u, 38126692714280695u, 38981833201360690u, 39884352161964116u, 40838247280016420u, 41847983391411326u, 42918562996259117u, 44055609977330306u, 45265469509681865u, 46555327944708071u, 47933357498977567u, 49408891963615614u, 50992641499812772u, 52696957080236763u, 54536158534549957u, 56526944840053827u, 58688911829648933u, 61045211718156595u, 63623402074661316u, 66456551118387200u, 69584694705485219u, 65887249404450334u, 70762978821664948u, 57346704366683564u, 71512017491343982u, 67185873792067285u, 67976575731804258u, 47049452588209091u, 60727975469361388u, 52862796055634384u, 54330245202402199u, 68860226579648466u, 64663652380087401u, 43688741546608623u, 54555791841795724u, 33092078962192699u, 63464174377331213u, 51040972341599684u, 51369544840893175u, 0u, 0u, 0u };
	MT_FLUSH();
	uint8_t i = Rand->s[0];
	if (i < __EXP_BINS__) return __exp_X__[i]*(Rand++->l & 0x00ffffffffffffff);
	Rand++;
	uint8_t j = _WDS_SAMPLER(); 
	return j == 0 ? 7.56927469415 + exponential() : _exp_overhang(j);
}
#endif

